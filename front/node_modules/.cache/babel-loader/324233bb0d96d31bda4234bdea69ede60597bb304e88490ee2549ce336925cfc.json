{"ast":null,"code":"var _jsxFileName = \"/Users/fedeciappina/Documents/HenryCursada/RM-Again/againrym/IntegradosFBB/R-M-FullStack-/front/src/components/Card/Card.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport style from \"./Card.module.css\";\nimport { connect } from \"react-redux\";\n/* connect te permite acceder al estado global de tu aplicaci칩n (lo que se almacena en Redux) \ndesde cualquier componente de React. Esto es 칰til porque te permite compartir datos y \nfuncionalidades entre componentes sin necesidad de pasar datos de un componente a otro \na trav칠s de las propiedades. En lugar de eso, todos los componentes conectados a \nRedux pueden acceder al estado global y actualizarlo mediante acciones de Redux.\n */\nimport { addFavorite, removeFavorite } from \"../../redux/actions\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(_ref) {\n  _s();\n  let {\n    id,\n    name,\n    species,\n    gender,\n    image,\n    onClose,\n    addFavorite,\n    removeFavorite,\n    myFavorites\n  } = _ref;\n  const [isFav, setIsFav] = useState(false);\n  const handleFavorite = () => {\n    if (isFav) {\n      setIsFav(false);\n      removeFavorite(id);\n    } else {\n      setIsFav(true);\n      addFavorite({\n        id,\n        name,\n        species,\n        gender,\n        image,\n        onClose,\n        addFavorite,\n        removeFavorite\n      });\n    }\n  };\n\n  //?\n\n  useEffect(() => {\n    myFavorites.forEach(fav => {\n      if (fav.id === id) {\n        setIsFav(true);\n      }\n    });\n  }, [myFavorites]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [isFav ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFavorite,\n      children: \"\\uD83D\\uDD25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFavorite,\n      children: \"\\uD83D\\uDD25\\uD83D\\uDD25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClose(id),\n      className: style.closeButton,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/detail/${id}`,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Name: \", name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"imagen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Species: \", species, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Gender: \", gender, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n/*\n En resumen, la funci칩n Card nos permite mostrar informaci칩n detallada sobre \n un personaje m치gico, as칤 como un bot칩n de cierre \n  y un enlace a una p치gina de detalles para obtener a칰n m치s informaci칩n sobre el personaje.\n  */\n_s(Card, \"P/ohr7L6r3Ai4GOhTgqo0B9M8uQ=\");\n_c = Card;\nconst mapDispatchToProps = dispatch => {\n  return {\n    addFavorite: character => {\n      dispatch(addFavorite(character));\n    },\n    removeFavorite: id => {\n      dispatch(removeFavorite(id));\n    }\n  };\n};\n\n/*\nEn resumen, mapDispatchToProps permite al componente llamar a las acciones de Redux \n(addFavorite y removeFavorite) a trav칠s de las propiedades del componente. \nEsto hace que sea f치cil para el componente actualizar el estado de la aplicaci칩n global \nalmacenado en Redux.\n*/\n\nconst mapStateToProps = state => {\n  return {\n    myFavorites: state.myFavorites\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["Link","style","connect","addFavorite","removeFavorite","useEffect","useState","jsxDEV","_jsxDEV","Card","_ref","_s","id","name","species","gender","image","onClose","myFavorites","isFav","setIsFav","handleFavorite","forEach","fav","className","container","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","closeButton","to","src","alt","_c","mapDispatchToProps","dispatch","character","mapStateToProps","state","$RefreshReg$"],"sources":["/Users/fedeciappina/Documents/HenryCursada/RM-Again/againrym/IntegradosFBB/R-M-FullStack-/front/src/components/Card/Card.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport style from \"./Card.module.css\";\nimport { connect } from \"react-redux\";\n/* connect te permite acceder al estado global de tu aplicaci칩n (lo que se almacena en Redux) \ndesde cualquier componente de React. Esto es 칰til porque te permite compartir datos y \nfuncionalidades entre componentes sin necesidad de pasar datos de un componente a otro \na trav칠s de las propiedades. En lugar de eso, todos los componentes conectados a \nRedux pueden acceder al estado global y actualizarlo mediante acciones de Redux.\n */\nimport { addFavorite, removeFavorite } from \"../../redux/actions\";\nimport { useEffect, useState } from \"react\";\n\nfunction Card({\n  id,\n  name,\n  species,\n  gender,\n  image,\n  onClose,\n  addFavorite,\n  removeFavorite,\n  myFavorites,\n}) {\n  const [isFav, setIsFav] = useState(false);\n\n  const handleFavorite = () => {\n    if (isFav) {\n      setIsFav(false);\n      removeFavorite(id);\n    } else {\n      setIsFav(true);\n      addFavorite({\n        id,\n        name,\n        species,\n        gender,\n        image,\n        onClose,\n        addFavorite,\n        removeFavorite,\n       \n      });\n    }\n  };\n\n  //?\n\n  useEffect(() => {\n    myFavorites.forEach((fav) => {\n      if (fav.id === id) {\n        setIsFav(true);\n      }\n    });\n  }, [myFavorites]);\n  \n\n  return (\n    <div className={style.container}>\n      {isFav ? (\n        <button onClick={handleFavorite}>游댠</button>\n      ) : (\n        <button onClick={handleFavorite}>游댠游댠</button>\n      )}\n      <button onClick={() => onClose(id)} className={style.closeButton}>\n        X\n      </button>\n      <Link to={`/detail/${id}`}>\n        <h2>Name: {name} </h2>\n      </Link>\n      <img src={image} alt=\"imagen\" />\n      <h2>Species: {species} </h2>\n      <h2>Gender: {gender} </h2>\n    </div>\n  );\n}\n\n/*\n En resumen, la funci칩n Card nos permite mostrar informaci칩n detallada sobre \n un personaje m치gico, as칤 como un bot칩n de cierre \n  y un enlace a una p치gina de detalles para obtener a칰n m치s informaci칩n sobre el personaje.\n  */\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addFavorite: (character) => {\n      dispatch(addFavorite(character));\n    },\n    removeFavorite: (id) => {\n      dispatch(removeFavorite(id));\n    },\n  };\n};\n\n/*\nEn resumen, mapDispatchToProps permite al componente llamar a las acciones de Redux \n(addFavorite y removeFavorite) a trav칠s de las propiedades del componente. \nEsto hace que sea f치cil para el componente actualizar el estado de la aplicaci칩n global \nalmacenado en Redux.\n*/\n\nconst mapStateToProps = (state) => {\n  return {\n    myFavorites: state.myFavorites,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}